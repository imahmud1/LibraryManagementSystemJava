
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author IFTI
 */
public class Category extends javax.swing.JFrame {

    /**
     * Creates new form Category
     */
    Connection con1,con2,con3;
    PreparedStatement select,insert,add,delete,update,tbl;
    ResultSet rs;
    public Category() {
        Connect();
        initComponents();
        table_category();
    }
    
public void Connect()
    {
        try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SignUP.class.getName()).log(Level.SEVERE, null, ex);
        }
            try {
                con1 = DriverManager.getConnection("jdbc:mysql://localhost/librarymanagement","root","");
            } catch (SQLException ex) {
                System.out.print(ex);
            }
    }
private void table_category()
    {
        try{
            tbl = con1.prepareStatement("select * from category_table");
            rs = tbl.executeQuery();
            
            javax.swing.table.DefaultTableModel df = (javax.swing.table.DefaultTableModel) jTable2.getModel();
            df.setRowCount(0);
            
            while(rs.next())
            {
                String id = String.valueOf(rs.getInt("id"));
                String category = rs.getString("category");
                String status = rs.getString("status");
                
                String row[] = {id,category,status};
                df.addRow(row);
            }
        }catch(SQLException ex)
        {
            System.out.print(ex);
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButtonDelete = new javax.swing.JToggleButton();
        jTextFieldCategory = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxStatus = new javax.swing.JComboBox<>();
        jButtonAdd = new javax.swing.JToggleButton();
        back = new javax.swing.JToggleButton();
        jButtonUpdate1 = new javax.swing.JToggleButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Category", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable2);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(502, 0, 500, 650));

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setText("Status");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 110, 40));

        jButtonDelete.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 340, 110, 40));
        getContentPane().add(jTextFieldCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 300, 40));

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel3.setText("Category");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 110, 40));

        jComboBoxStatus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));
        getContentPane().add(jComboBoxStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 300, 40));

        jButtonAdd.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 110, 40));

        back.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, 190, 40));

        jButtonUpdate1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButtonUpdate1.setText("Edit");
        jButtonUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdate1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonUpdate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 340, 110, 40));

        jToggleButton1.setBackground(new java.awt.Color(255, 255, 255));
        jToggleButton1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jToggleButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\IFTI\\Documents\\Icons\\Smaller\\Category.jpg")); // NOI18N
        jToggleButton1.setText("Category");
        getContentPane().add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\IFTI\\Documents\\Library.jpg")); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
String cat,stat;
        cat = jTextFieldCategory.getText();
        stat = (String) jComboBoxStatus.getSelectedItem();
        
        
        try{
            if(cat.isEmpty())
            {
                JOptionPane.showMessageDialog(this,"Please fill up both text field to add new category");
            }
            else
            {
                insert = con1.prepareStatement("insert into category_table(category,status) values(?,?)");
                insert.setString(1, cat);
                insert.setString(2, stat);
                int k = insert.executeUpdate();
                if(k == 1)
                {
                    JOptionPane.showMessageDialog(this,"Data inserted!");
                    
                    jTextFieldCategory.setText("");
                    jComboBoxStatus.setSelectedIndex(-1);
                    jTextFieldCategory.requestFocus();
                   
                    table_category();
                }
                else
                {
                    JOptionPane.showMessageDialog(this,"Error!");
                }
            }
        }catch(SQLException ex){
            System.out.println(ex);
    }                                            // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        this.dispose();
        LibrarianMenu back = new LibrarianMenu();
        back.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    private void jButtonUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdate1ActionPerformed
javax.swing.table.DefaultTableModel df = (javax.swing.table.DefaultTableModel) jTable2.getModel();
        int selectIndex = jTable2.getSelectedRow();
        int id = Integer.parseInt(df.getValueAt(selectIndex,0).toString());
        
        
        String cat,stat;
        cat = jTextFieldCategory.getText();
        stat = (String) jComboBoxStatus.getSelectedItem();
        try{
                update = con1.prepareStatement("update category_table set category=?,status=? where id=?");
                update.setString(1, cat);
                update.setString(2, stat);
                update.setInt(3, id);
                int k = update.executeUpdate();
                
                if(k == 1)
                {
                    JOptionPane.showMessageDialog(this,"Data Updated!");
                    
                    jTextFieldCategory.setText("");
                    jComboBoxStatus.setSelectedIndex(-1);
                    jTextFieldCategory.requestFocus();
                    
                    table_category();
                    jButtonAdd.setEnabled(true);
                }
                else
                {
                    JOptionPane.showMessageDialog(this,"Error!");
                }
        }catch(SQLException ex){
            System.out.println(ex);
        }
        
                           // TODO add your handling code here:
    }//GEN-LAST:event_jButtonUpdate1ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
javax.swing.table.DefaultTableModel df = (javax.swing.table.DefaultTableModel) jTable2.getModel();
        int selectIndex = jTable2.getSelectedRow();
        
        jTextFieldCategory.setText(df.getValueAt(selectIndex,1).toString());
        jComboBoxStatus.setSelectedItem(df.getValueAt(selectIndex,2).toString());
        
        jButtonAdd.setEnabled(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
javax.swing.table.DefaultTableModel df = (javax.swing.table.DefaultTableModel) jTable2.getModel();
        int selectIndex = jTable2.getSelectedRow();
        int id = Integer.parseInt(df.getValueAt(selectIndex,0).toString());
        
        
        String cat,stat;
        cat = jTextFieldCategory.getText();
        stat = (String) jComboBoxStatus.getSelectedItem();
        try{
            delete = con1.prepareStatement("delete from category_table where id=?");
            delete.setInt(1, id);
            int k = delete.executeUpdate();
                
            if(k == 1)
              {
                JOptionPane.showMessageDialog(this,"Data Deleted!");
                  
                jTextFieldCategory.setText("");
                jComboBoxStatus.setSelectedIndex(-1);
                jTextFieldCategory.requestFocus();
                
                table_category();
                jButtonAdd.setEnabled(true);
              }
              else
                {
                    JOptionPane.showMessageDialog(this,"Error!");
                }
        }catch(SQLException ex){
            System.out.println(ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Category().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton back;
    private javax.swing.JToggleButton jButtonAdd;
    private javax.swing.JToggleButton jButtonDelete;
    private javax.swing.JToggleButton jButtonUpdate1;
    private javax.swing.JComboBox<String> jComboBoxStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextFieldCategory;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
